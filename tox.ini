[tox]
skipsdist=True
# Run these envs when tox is invoked without -e
envlist=lint, unittest


[testenv]
# Factors:
#   lint:       Lint Python files with black, flake8, and isort
#   unittest:   Run Python unittests
#
# These factors are expected to combine into the follow generative environments:
#
#   lint
#   unittest
#
# These factors are expected to combine to be invoked with:
#
#   tox -e lint
#   tox -e unittest

recreate=False

basepython=python3.11

deps=
    lint:       {[lint-config]deps}
    unittest:   {[unittest-config]deps}

commands=
    lint:               {[lint-config]commands}
    unittest:           {[unittest-config]commands}

passenv=
    HOME
    LOCALAPPDATA


[lint-config]
# Configuration necessary to lint Python files.
# Note: This is not an env and will not run if invoked. Use:
#
#   tox -e lint
#
# To run Python linting.
deps=
    black
    flake8
    flake8-bugbear
    isort
commands=
    black . --check
    flake8
    isort --check-only --diff .


[unittest-config]
# Configuration necessary to run unittests.
# Note: This is not an env and will not run if invoked. Use:
#
#   tox -e unittest
#
# To run unit tests.
deps=
    bencode.py==4.0.0
    pytest
    coverage
commands=
    coverage erase
    python -b -m coverage run --source='.' -m pytest {posargs}
    coverage xml


[testenv:lint]
# Invoke with: tox -e lint
recreate=False
envdir={toxworkdir}/lint
deps={[lint-config]deps}
commands={[lint-config]commands}


[testenv:unittest]
# Invoke with: tox -e unittest
recreate=False
envdir={toxworkdir}/unittest
deps=
    {[unittest-config]deps}
commands={[unittest-config]commands}

[testenv:coverage]
# Invoke with: tox -e coverage
# Report out the coverage of changes on the current branch against the main
# branch. This will fail if the coverage of changes is below 100%. This env
# requires a coverage file and should only be run after unittest
deps=
    bencode.py==4.0.0
    pytest
    coverage
    diff-cover
commands=
    coverage xml
    diff-cover coverage.xml --compare-branch=origin/master --fail-under=100
